<template>
    <page-wrap>
        <!-- 搜索栏 -->
        <search-wrap>
            <search-form :data="searchData">
                <form-row>
                    <form-col width="5" label="关键词：">
                        <el-input v-model="searchData.keyword" placeholder="请输入内容"></el-input>
                    </form-col>
                    <form-col width="4" label="推广人员：">
                        <el-input v-model="searchData.userName" placeholder="请输入内容"></el-input>
                    </form-col>
                    <form-col width="8" label="任务日期：">
                        <el-date-picker
                                v-model="searchData.taskTime"
                                type="daterange"
                                value-format="yyyy-MM-dd"
                                range-separator="至"
                                start-placeholder="开始日期"
                                end-placeholder="结束日期">
                        </el-date-picker>
                    </form-col>
                    <form-col width="4" label="完成状态：">
                        <el-select v-model="searchData.status">
                            <el-option value="0" label="未完成"/>
                            <el-option value="1" label="已完成"/>
                        </el-select>
                    </form-col>
                    <form-col width="3">
                        <el-button type="primary" @click="onSubmit(null)">查询</el-button>
                        <el-button type="danger" @click="onClear">清空</el-button>
                    </form-col>
                </form-row>
            </search-form>
        </search-wrap>

        <!-- 表格 -->
        <table-wrap>
            <div class="withTableHeader">
                <el-tag type="success">任务文章数总计:{{complete_num}}/{{article_num}}</el-tag>
            </div>
            <el-table
                    ref="materialTaskTable"
                    v-loading="loading"
                    :data="tableData"
                    size="mini"
                    @sort-change="tableSortChange"
                    :height="tabTableHeight">
                <el-table-column label="关键词" prop="keyword" width="300px"></el-table-column>
                <el-table-column label="等级">
                    <template slot-scope="scope">
                        <span v-show="scope.row.level == 1" class="check_red">主词</span>
                        <span v-show="scope.row.level == 2" class="check_orange">辅助词</span>
                        <span v-show="scope.row.level == 3" class="check_green">长尾词</span>
                    </template>
                </el-table-column>
                <el-table-column label="PC历史排名" prop="old_rank_pc" width="90px"></el-table-column>
                <el-table-column label="PC最新排名" prop="new_rank_pc" width="90px"></el-table-column>
                <el-table-column label="PC变化趋势" prop="change_rank_pc" width="90px"></el-table-column>
                <el-table-column label="M历史排名" prop="old_rank_m" width="90px"></el-table-column>
                <el-table-column label="M最新排名" prop="new_rank_m" width="90px"></el-table-column>
                <el-table-column label="M变化趋势" prop="change_rank_m" width="90px"></el-table-column>
                <el-table-column label="分类" prop="category"></el-table-column>
                <el-table-column label="绑定学校" prop="l_name"></el-table-column>
                <!--<el-table-column label="任务时间" prop="create_time"></el-table-column>-->
                <el-table-column label="任务文章数/词">
                    <template slot-scope="scope">{{scope.row.complete_num}}/{{scope.row.article_num}}</template>
                </el-table-column>
                <!--<el-table-column label="状态">-->
                    <!--<template slot-scope="scope">{{scope.row.status !== 0 ? '完成':'未完成'}}</template>-->
                <!--</el-table-column>-->
                <el-table-column label="PC收录">
                    <template slot-scope="scope">
                    <span v-show="scope.row.is_archive_pc == 0" class="check_red">未收录</span>
                    <span v-show="scope.row.is_archive_pc == 1" class="check_orange">已收录</span>
                    </template>
                </el-table-column>
                <el-table-column label="M收录">
                    <template slot-scope="scope">
                    <span v-show="scope.row.is_archive_m == 0" class="check_red">未收录</span>
                    <span v-show="scope.row.is_archive_m == 1" class="check_orange">已收录</span>
                    </template>
                </el-table-column>
                <el-table-column label="推广人员" prop="user_name" width="140px"></el-table-column>
                <el-table-column label="操作" width="120px"  fixed="right" header-align="center">
                    <el-button-group slot-scope="scope">
                        <el-tooltip class="item" effect="dark" content="素材" placement="bottom-start" offset="10">
                            <el-button type="text" plain size="mini" icon="el-icon-edit" @click="openMaterialInput(scope.row)"></el-button>
                        </el-tooltip>
                        <el-tooltip class="item" effect="dark" content="推广" placement="bottom-start" offset="10">
                            <el-button type="text" plain size="mini" icon="el-icon-share" @click="openReleaseInput(scope.row)"></el-button>
                        </el-tooltip>
                        <el-tooltip class="item" effect="dark" content="文章" placement="bottom-start" offset="10">
                            <el-button type="text" plain size="mini" icon="el-icon-document" @click="clickLink(scope.row.keyword)"></el-button>
                        </el-tooltip>
                    </el-button-group>
                </el-table-column>
            </el-table>
        </table-wrap>

        <!-- 分页 -->
        <pagination :data="paginationData" @submit="onSubmit"/>

    </page-wrap>
</template>

<script>
    import PageWrap from './../../components/pageStructure/PageWrap.vue'
    import SearchWrap from './../../components/pageStructure/SearchWrap.vue'
    import TableWrap from './../../components/pageStructure/TableWrap.vue'
    import Pagination from './../../components/pageStructure/Pagination.vue'
    import SearchForm from './../../components/pageStructure/SearchForm.vue'
    import FormRow from './../../components/pageStructure/SearchFormRow.vue'
    import FormCol from './../../components/pageStructure/SearchFormRowCol.vue'

    import { mapState, mapMutations } from 'vuex'

    export default {
        components: {
            PageWrap, SearchWrap, TableWrap,  Pagination, SearchForm, FormRow, FormCol
        },
        data() {
            return {
                searchData: {keyword:'',userName: '', taskTime: [], status: ''},
                tableData: [],
                loading: false,
                paginationData: {currentPage:1,pageSize:50,total:0},
                buttonControl:{},
                complete_num:0,
                article_num:0,
                releaseId:0
            }
        },
        computed: {
            ...mapState('navTabs', [
                'tabTableHeight','material_to_taskDetail'
            ])
        },
        watch: {
            material_to_taskDetail () {
                this.initSearchData()
            }
        },
        mounted() {
            this.initSearchData()
            this.onSubmit()
        },
        methods: {
            initSearchData () {
                this.searchData = {
                    userName: this.material_to_taskDetail.userName !== '' ? this.material_to_taskDetail.userName : "",
                    taskTime: this.material_to_taskDetail.taskTime !== '' ? this.material_to_taskDetail.taskTime : [],
                    status:this.material_to_taskDetail.status !== '' ? this.material_to_taskDetail.status : "",
                }
            },
            ...mapMutations('navTabs', ['addTab', 'func_keyword_to_articles']),
            ...mapMutations('pagePassValue', ['func_taskDetail_to_input','func_taskDetail_to_article']),
            clickLink (val) {
                let obj = {
                    keyword: val
                }
                this.addTab({name: 'material/Articles', title: '关键词文章'})
                this.func_keyword_to_articles(obj)
            },
            openMaterialInput (row) {
                this.addTab({name: 'material/TaskDetailComponents/MaterialInput', title: '素材录入'})
                this.func_taskDetail_to_input({kw_id: row.kw_id, td_id: row.td_id})
            },
            openReleaseInput (row) {
                this.addTab({name: 'material/TaskDetailComponents/ReleaseInput', title: '文章录入'})
                this.func_taskDetail_to_article({kw_id: row.kw_id, td_id: row.td_id,ka_id:0})
            },
            closeRelease (val) {
                this.openRelease = false
            },
            onClear(){
                this.searchData ={keyword:'',userName: '', taskTime: [], status: ''}
            },
            onSubmit(paginationData=null) {
                let that = this
                if(paginationData !== null){
                    that.paginationData = paginationData;
                }else{
                    that.paginationData.currentPage = 1;
                }
                if(this.loading){
                    return
                }
                this.$ajax.post('/material_task_detail/list', {search: that.searchData, paginate: that.paginationData})
                    .then(function (res) {
                        if (res.data !== undefined) {
                            that.tableData = res.data.data
                            that.paginationData.total = res.data.total
                            that.complete_num = res.data.complete_num
                            that.article_num = res.data.article_num
                            that.loading = false
                            that.buttonControl = res.data.buttonControl
                        }
                    })
                    .catch(function (err) {
                        that.$message('网络错误！请联系管理员')
                        that.loading = false
                    })
            },
            tableSortChange(val){
                this.paginationData.prop = val.prop
                this.paginationData.order = val.order
                this.onSubmit()
            },
        }
    }
</script>
