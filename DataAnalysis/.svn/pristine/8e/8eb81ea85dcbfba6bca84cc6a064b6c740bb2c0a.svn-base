<?php

namespace app\index\model;

use app\common\Utility;
use app\index\model\Departments;
use app\index\controller\Zlog;
use think\Db;
use think\Exception;
use think\exception\DbException;
use think\Log;
use think\Model;
use think\Session;
use think\Request;
use app\common\Permission;

class Role extends Model
{
    public  function getList()
    {
        $request = Request::instance()->post();
        $ID = isset($request["search"]["ID"])?trim($request["search"]["ID"]):"";
        $query_a = Db::table('org_roles');
        $query_b = Db::table('org_roles');
        if ($ID){
            $query_a->where('ID','=',$ID);
            $query_b->where('ID','=',$ID);
        }
        $total = $query_a->count();
        $pagesize = isset($request["page"]["pageSize"])?trim($request["page"]["pageSize"]):"50";
        $currentPage = isset($request["page"]["currentPage"])?trim($request["page"]["currentPage"]):"1";
        $result = $query_b->page($currentPage,$pagesize)->select();

        return [
            "tableData"=>$result,
            "total"=>$total,
//            'dp_option'=>$dp_option,
        ];
    }

    /**
     * @return array
     */
    public function add()
    {
        $req = Request::instance()->post();
        $req = $req['formData'];
        if (!$req['desc']){
            return ['status'=>400,'msg'=>'请填写完整！'];
        }
        try{
            Db::table('org_roles')->insert(['Title'=>time(),'Description'=>$req['desc']]);
        }catch (\Exception $e){
            return [
                'status'=>400,'msg'=>'标志重复'
            ];
        }
        return [
          'status'=>200,'msg'=>'添加用户组成功'
        ];
    }

    public function editShow($role_id)
    {
        $test_arr = $new_test_arr = $dp_option = [];
        $str_sql = '';
//        (new Departments())->getTree($dp_option);
//        $dp_option[]=['id'=>0,'label'=>'全部'];
        $opstions = Db::table('org_permissions')->field(['ID as value','Description as label','IDParent as p_id','type'])->order('label')->select();
        foreach ($opstions as $key=>$value) {
            $prefix = strstr($value['label'], '-', TRUE);
            $test_arr[$prefix][$key]['id'] = $value['value'];
            $test_arr[$prefix][$key]['label'] = $value['label'];
            $test_arr[$prefix][$key]['p_id'] = $value['p_id'];
            $test_arr[$prefix][$key]['type'] = $value['type'];
        }
        foreach ($test_arr as $key=>$value) {
            foreach ($value as $list=>$info) {
                if ($info['p_id'] == 0) {
                    $new_test_arr[$key]['id'] = $info['id'];
                    $new_test_arr[$key]['range'] = [];
                    $new_test_arr[$key]['label'] = $key;
                } else{
                    $childrenarr[$key][$list]['id'] = $info['id'];
                    $childrenarr[$key][$list]['range'] = [];
                    $childrenarr[$key][$list]['type'] = (int)$info['type'];
                    $childrenarr[$key][$list]['label'] = $info['label'];
                    $new_test_arr[$key]['children'] = array_values($childrenarr[$key]);
                }
            }
        }
        $true_arr = array_values($new_test_arr);
        $selected = Db::table('org_rolepermissions')->where('RoleID','=',$role_id)->column('PermissionID');
        foreach ($selected as $key=>$value) {
            $str_sql .= ' CASE WHEN permissionID = '.$value.' THEN `Range` END AS range_'.$value." ,";
        }
        $str_sql = rtrim($str_sql,",");
        $range = Db::table('org_range o')->field($str_sql)
            ->join("org_rolepermissions or","o.rolepermissions_id=or.ID","left")
            ->where('PermissionID','IN',$selected)->select();
        //->value('Range','')
        $dp_id = [];
        if(!empty($range)){
            foreach ($range as $list=>$info) {
                foreach ($info as $key=>$value) {
                    if (!empty($value) OR $value != "") {
                        $dp_arr = explode(',',$value);
                        $dp_id[$key] = array_map('intval',$dp_arr);
                    }
                }
            }
        }
        return [
            'options'=>$true_arr,
            'selected'=>$selected,
            'dp_id'=>$dp_id,
        ];
    }
    public function editSave($post)
    {
        $req = $post['table'];
        if (!$req['desc'])
            return ['type'=>'error','msg'=>'请填写完整！'];
        $seleced = $req['selected'];
        foreach ($req['dp_id'] as $key=>$value) {
            $req['dp_id'][$key]=array_unique($value);
        }
        Db::startTrans();
        try{
        //0、修改org_roles表中的数据
            Db::table('org_roles')->where('ID','=',$req['id'])
                ->update(['Description'=>$req['desc'],'KeywordNum'=>$req['num']]);
        //1、删除org_range表中rolepermissions_id（即org_rolepermissions表中的自增ID）对应的数据
            $org_rangeID = Db::table("org_range or")->join("org_rolepermissions orp","orp.ID=or.rolepermissions_id","LEFT")
                ->where('RoleID','=',$req['id'])->column("range_id");
            Log::alert($org_rangeID);
            if (!empty($org_rangeID)){
                Db::table("org_range")->where('range_id','IN',$org_rangeID)->delete();
            }
        //2、删除org_rolepermissions表中$res['id']对应的数据
            Db::table('org_rolepermissions')->where('RoleID','=',$req['id'])->delete();
        //3、往org_rolepermissions表插入新增数据
//            $objRbac = new Permission();
            $insert_data = [];
            if (!empty($seleced)){
                foreach ($seleced as $k=>$v){
                    $insert_data[$k] = [
                        'RoleID'=>$req['id'],
                        'PermissionID'=>$v,
                        'AssignmentDate'=>time()
                    ];
//                    $objRbac->assign($req['id'],$v);
                }
                DB::table("org_rolepermissions")->insertAll($insert_data);
            }
        //4、往org_range表中插入新数据
            $permissions_id = $insert_perm_id = $data = [];$str_sql = "";
            foreach ($req['dp_id'] as $key=>$value) {
                $permissions = str_replace("range_","",$key);
                $str_sql .= ' CASE WHEN permissionID = '.$permissions.' THEN `ID` END AS range_'.$permissions." ,";
                $permissions_id[] = $permissions;
            }
            $str_sql = rtrim($str_sql,",");
            $rolepermissions_id = Db::table("org_rolepermissions")->field($str_sql)->where("PermissionID","IN",$permissions_id)->where('RoleID','=',$req['id'])->select();
            foreach ($rolepermissions_id as $key=>$value) {
                $snap_arr = array_filter($value);
                foreach ($snap_arr as $list=>$info) {
                    $insert_perm_id[$list] = $info;
                }
            }
            foreach ($insert_perm_id as $key=>$value) {
                $str = implode(",",$req['dp_id'][$key]);
                $data[] = [
                    'rolepermissions_id'=>$value,
                    'range'=>$str,
                ];
            }
            DB::table("org_range")->insertAll($data);
            Db::commit();
        } catch (\Exception $e) {
            Db::rollback();
            return ['type'=>'error','msg'=>'数据库操作失败！'];
        }
        return ['type'=>'success','msg'=>'操作成功！'];
    }

    public function roleShow($user_id)
    {
        $opstions = Db::table('org_roles')->field(['ID as value','Description as label'])->select();
        $selected = Db::table('org_userroles')->where('UserID','=',$user_id)->column('RoleID');
        $result = Db::table('users')->where('user_id','=',$user_id)->find();
        return [
            'options'=>$opstions,
            'selected'=>$selected,
            'dp_id'=>$result['dp_id'],
            'user_name'=>$result['user_name'],
            'email'=>$result['email'],
            'user_sn'=>$result['user_sn'],
        ];
    }
    public function roleSave($req)
    {
        if (!$req['selected'] || !$req['user_id']){
            return ['type'=>'error','msg'=>'未获取到信息！'];
        }
        try{
            Db::table('org_userroles')->where('UserID','=',$req['user_id'])->delete();
            $objRbac = new Permission();
            foreach ($req['selected'] as $v){
                $objRbac->Users->assign($v,$req['user_id']);
            }
            Db::table('users')->where('user_id','=',$req['user_id'])
                ->update(['dp_id'=>$req['dp_id'][0],"user_name"=>$req['user_name'],"email"=>$req['email'],'user_sn'=>$req['user_sn']]);
        } catch (\Exception $e) {
            return ['type'=>'error','msg'=>'数据库操作失败！'];
        }
        return ['type'=>'success','msg'=>'操作成功！'];
    }

    public function getAllDp()
    {
        $dp_option =[];
        (new Departments())->getTree($dp_option);
        $dp_option[]=['id'=>0,'label'=>'全部'];
        return $dp_option;
    }
}
