<template>
  <table class="table1" cellspacing="0">
    <tr>
      <td colspan="2">
        <b>关键词：</b>{{form.keyword}}
        <b style="margin-left: 30px;">分类：</b>{{form.category}}
        <b style="margin-left: 30px;">已发文章：</b>{{form.article_num}}
        <b style="margin-left: 30px;">选择素材：
          <el-button icon="el-icon-search" @click="articlesShow = !articlesShow"/>
        </b>
      </td>
    </tr>
    <tr>
      <td style="width: 50%;">
        标题:
        <el-input style="width: 50%;" size="mini" v-model="form.title"></el-input>
        <!--<span class="red fr" style="margin-right:10px;">(未包含关键词)</span>-->
      </td>
      <td style="width: 50%;">
        来源作者:
        <el-input style="width: 50%;" size="mini" v-model="form.author"></el-input>
      </td>
    </tr>
    <tr style="height: 250px;">
      <td colspan="3">
        <ueditor
                @getUeMsg="getUEMsg"
                :insertMsg="insertedMsg"
                keyId="release_editor"
        />
      </td>
    </tr>
    <tr>
      <td>
        <el-upload
                size="mini"
                name="cover_img"
                :on-success="uploadCover"
                action="index.php/material_input/update_cover_img">
          <el-button size="small" type="warning" plain>点击上传封面</el-button>
          <!-- <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div> -->
        </el-upload>
      </td>
      <td colspan="2" class="buttons">
        <el-button type="primary" plain size="mini" @click="removeHTMLFunc">去HTML</el-button>
        <!-- <el-button type="primary" plain size="mini">插入图片</el-button> -->
        <!-- <el-button type="primary" plain size="mini">图片代码</el-button> -->
        <el-button type="primary" plain size="mini" @click="insertKeywordFunc">插入关键词</el-button>
        <!-- <el-button type="primary" plain size="mini">首关键词加粗</el-button> -->
        <!-- <el-button type="primary" plain size="mini">同义词替换</el-button> -->
      </td>
    </tr>
    <tr style="height: 50px;">
      <td colspan="3">检测结果：&nbsp;&nbsp;
        <span class="red">{{result}}</span>
      </td>
    </tr>
    <tr style="height: 40px;">
      <td >
        <el-radio-group v-model="form.type">
          <el-radio :label="1">新闻</el-radio>
          <el-radio :label="2">头条</el-radio>
          <el-radio :label="3">知道</el-radio>
        </el-radio-group>
      </td>
      <td colspan="2">
        <div v-show="form.type === 1" >地区：<el-input size="mini" style="width: 120px;" v-model="form.area_name" readonly>
          <el-button slot="append" icon="el-icon-search" @click="areaHandle = !areaHandle"></el-button>
        </el-input>
        </div>
        <div v-show="form.type === 3">
          悬赏积分：
          <el-select v-model="form.points" style="width: 100px;" size="mini" placeholder="请选择">
            <el-option
                    v-for="item in integralOptions"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value">
            </el-option>
          </el-select>&nbsp;&nbsp;(分)
        </div>
        </el-form>
      </td>
    </tr>
    <tr>
      <td colspan="3" class="buttons2">
        <!--<el-button type="primary" size="mini">文章检测</el-button>-->
        <!--<el-button type="primary" size="mini">文章预览</el-button>-->
        <el-button type="primary" size="mini" @click="saveMaterial">保存文章</el-button>
        <el-button type="primary" size="mini" @click="releaseMaterial">保存发布</el-button>
        <el-button type="primary" size="mini">取消</el-button>
      </td>
    </tr>
    <articles :handle="articlesShow" @callback="articlesCallback"/>
    <areas :handle="areaHandle" @callback="areaSelect"/>
  </table>
</template>

<script>
    import ueditor from './../../../components/base/ueditor.vue'
    import Articles from './../../../components/dialog/Articles.vue'
    import Areas from './../../../components/dialog/Area.vue'
    import { mapState } from 'vuex'
    export default {
        components: {
            ueditor,Articles,Areas
        },
        computed: {
            ...mapState('pagePassValue', [
                'taskDetail_to_article'
            ])
        },
        watch: {
            taskDetail_to_article () {
                this.getFormData()
                        }
        },
        mounted(){
            this.getFormData();
        },
        data () {
            return {
                result:'',
                articlesShow:false,
                load:false,
                form:{
                    ka_id:0,
                    km_id:0,
                    td_id:0,
                    kw_id:0,
                    keyword:'',
                    c_id:0,
                    category:'',
                    material_num:0,
                    title:'',
                    author:'',
                    cover_img:'',
                    content:'',
                    type:1,
                    area_id:0,
                    area_name:'',
                    points:'0',
                },
                integralOptions: [
                    {
                        value: '0',
                        label: '无悬赏'
                    }, {
                        value: '10',
                        label: '10'
                    }, {
                        value: '20',
                        label: '20'
                    }, {
                        value: '30',
                        label: '30'
                    }, {
                        value: '40',
                        label: '40'
                    }, {
                        value: '50',
                        label: '50'
                    }, {
                        value: '70',
                        label: '70'
                    }, {
                        value: '100',
                        label: '100'
                    }
                ],
                insertedMsg: {
                    insertMsgBool: false,
                    msg: ''
                },
                time: {},
                areaHandle:false
            }
        },
        destroyed () {
            clearTimeout(this.time)
        },
        methods: {
            getFormData () {
                let that = this
                let kw_id = this.taskDetail_to_article.kw_id
                let td_id = this.taskDetail_to_article.td_id
                let ka_id = this.taskDetail_to_article.ka_id
                if (typeof(kw_id) !== undefined) {
                    that.form.kw_id = kw_id
                    that.$ajax.get('material_input/info?kw_id='+kw_id).then(function (res) {
                        if(res.status === 200){
                            that.form.keyword = res.data.keyword;
                            that.form.c_id = res.data.c_id;
                            that.form.category = res.data.category;
                            that.form.article_num = res.data.article_num;
                        }
                    }).catch(function (res) {
                        that.$message({type:'error',message:res.data})
                    })
                }
                if(ka_id >0){
                    that.form.ka_id = ka_id
                    that.$ajax.get('material_article/info?ka_id='+ka_id).then(function (res) {
                        if(res.status === 200){
                            that.form.title = res.data.title;
                            that.insertedMsg = {insertMsgBool: !that.insertedMsg.insertMsgBool,msg:res.data.content};
                            that.form.author = res.data.author;
                            that.form.cover_img = res.data.cover_img;
                            that.form.type = res.data.type;
                            that.form.area_id = res.data.area_id;
                            that.form.points = res.data.points;
                        }
                    }).catch(function (res) {
                        that.$message({type:'error',message:res})
                    })
                }

                if (typeof(td_id) !== undefined){
                    that.form.td_id = td_id
                }
            },
            getUEMsg (msg) {
                this.form.content = msg
            },
            removeHTMLFunc () {
                this.insertedMsg = {insertMsgBool: !this.insertedMsg.insertMsgBool,msg:this.filterAllTags(this.form.content)}
            },
            insertKeywordFunc (keyword) {
                let msgInfo
                if (typeof keyword == "object") {
                    msgInfo = this.form.keyword + this.form.content
                } else {
                    msgInfo = keyword +this.form.content
                }
                this.insertedMsg = {
                    insertMsgBool: !this.insertedMsg.insertMsgBool,
                    msg: msgInfo
                }
            },
            filterAllTags (str) {
                str = str.replace(/<\/?[^>]*>/g,''); //去除HTML tag
                str = str.replace(/[ | ]*\n/g,'\n'); //去除行尾空白
                str = str.replace(/\n[\s| | ]*\r/g,'\n'); //去除多余空行
                str = str.replace(/&nbsp;/ig, '');  //去掉所有空格
                return str
            },
            saveMaterial(){
                let that = this
                if(that.form.title === ''){
                    that.$message.error('标题不可为空！')
                }else if(that.form.author === ''){
                    that.$message.error('作者不可为空！')
                }else if(that.form.cover_img === ''){
                    that.$message.error('封面图不可为空！')
                }else if(that.form.content === ''){
                    that.$message.error('文章内容不可为空！')
                }else {
                    that.$ajax.post('article_input/save', that.form).then(function (res) {
                        if (res.data.error === 0) {
                            that.form.ka_id = res.data.data
                            that.$message.success('保存成功！')
                        } else {
                            that.$message({'type': 'error', message: res.data.message})
                        }
                    }).catch(function (res) {
                        that.$message.error('网络错误')
                    })
                }
            },
            releaseMaterial(){
                let that = this
                if(that.form.title === ''){
                    that.$message.error('标题不可为空！')
                }else if(that.form.author === ''){
                    that.$message.error('作者不可为空！')
                }else if(that.form.cover_img === ''){
                    that.$message.error('封面图不可为空！')
                }else if(that.form.content === ''){
                    that.$message.error('文章内容不可为空！')
                }else {
                    that.$ajax.post('article_input/save_release', that.form).then(function (res) {
                        if (res.data.error === 0) {
                            that.form.ka_id = res.data.data;
                            that.$message('保存发布成功')
                        } else {
                            that.form.ka_id = res.data.data;
                            that.result = res.data.message
                            that.$message({type: 'error', message: '发布失败'})
                        }
                    }).catch(function (res) {
                        that.$message.error('网络错误！')
                    })
                }
            },
            uploadCover(response, file, fileList){
                this.form.cover_img = response
            },
            handleClose () {
                this.$emit('close', false)
            },
            articlesCallback:function (data) {
                this.form.title = data.title
                this.form.author = data.author
                this.form.type = String(data.type)
                this.form.content = data.content
                this.form.cover_img = data.cover_img
                this.form.area_id = data.area_id
                this.form.points = data.points
                this.insertKeywordFunc(data.content)
            },
            areaSelect(data){
                this.form.area_id = data.area_id;
                this.form.area_name = data.area_name;
            }
        }
    }
</script>

<style>
  .el-dialog__body {
    padding: 10px 20px;
  }
  .el-upload-list {
    vertical-align: middle;
    display: inline-block;
    margin-bottom: 5px;
  }
  .table1 {
    font-size: 15px;
  }
</style>
